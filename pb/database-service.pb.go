// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: database-service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IckeyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IckeyError) Reset() {
	*x = IckeyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IckeyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IckeyError) ProtoMessage() {}

func (x *IckeyError) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IckeyError.ProtoReflect.Descriptor instead.
func (*IckeyError) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{0}
}

func (x *IckeyError) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

//测试
type GetPersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPersonReq) Reset() {
	*x = GetPersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonReq) ProtoMessage() {}

func (x *GetPersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonReq.ProtoReflect.Descriptor instead.
func (*GetPersonReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetPersonReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPersonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone int32  `protobuf:"varint,3,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetPersonResp) Reset() {
	*x = GetPersonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonResp) ProtoMessage() {}

func (x *GetPersonResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonResp.ProtoReflect.Descriptor instead.
func (*GetPersonResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetPersonResp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPersonResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPersonResp) GetPhone() int32 {
	if x != nil {
		return x.Phone
	}
	return 0
}

//获取Rds实例信息
type GetRdsInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId int32 `protobuf:"varint,1,opt,name=RegionId,proto3" json:"RegionId,omitempty"`
}

func (x *GetRdsInstanceReq) Reset() {
	*x = GetRdsInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRdsInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRdsInstanceReq) ProtoMessage() {}

func (x *GetRdsInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRdsInstanceReq.ProtoReflect.Descriptor instead.
func (*GetRdsInstanceReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetRdsInstanceReq) GetRegionId() int32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type RdsInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DBInstanceId          string `protobuf:"bytes,1,opt,name=DBInstanceId,proto3" json:"DBInstanceId,omitempty"`
	DBInstanceDescription string `protobuf:"bytes,2,opt,name=DBInstanceDescription,proto3" json:"DBInstanceDescription,omitempty"`
	Engine                string `protobuf:"bytes,3,opt,name=Engine,proto3" json:"Engine,omitempty"`
	EngineVersion         string `protobuf:"bytes,4,opt,name=EngineVersion,proto3" json:"EngineVersion,omitempty"`
	DBInstanceType        string `protobuf:"bytes,5,opt,name=DBInstanceType,proto3" json:"DBInstanceType,omitempty"`
	DBInstanceStatus      string `protobuf:"bytes,6,opt,name=DBInstanceStatus,proto3" json:"DBInstanceStatus,omitempty"`
	RegionId              string `protobuf:"bytes,7,opt,name=RegionId,proto3" json:"RegionId,omitempty"`
	ConnectionString      string `protobuf:"bytes,8,opt,name=ConnectionString,proto3" json:"ConnectionString,omitempty"`
}

func (x *RdsInstance) Reset() {
	*x = RdsInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdsInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdsInstance) ProtoMessage() {}

func (x *RdsInstance) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdsInstance.ProtoReflect.Descriptor instead.
func (*RdsInstance) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{6}
}

func (x *RdsInstance) GetDBInstanceId() string {
	if x != nil {
		return x.DBInstanceId
	}
	return ""
}

func (x *RdsInstance) GetDBInstanceDescription() string {
	if x != nil {
		return x.DBInstanceDescription
	}
	return ""
}

func (x *RdsInstance) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *RdsInstance) GetEngineVersion() string {
	if x != nil {
		return x.EngineVersion
	}
	return ""
}

func (x *RdsInstance) GetDBInstanceType() string {
	if x != nil {
		return x.DBInstanceType
	}
	return ""
}

func (x *RdsInstance) GetDBInstanceStatus() string {
	if x != nil {
		return x.DBInstanceStatus
	}
	return ""
}

func (x *RdsInstance) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *RdsInstance) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

type GetRdsInstanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RdsList []*RdsInstance `protobuf:"bytes,1,rep,name=RdsList,proto3" json:"RdsList,omitempty"`
}

func (x *GetRdsInstanceResp) Reset() {
	*x = GetRdsInstanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRdsInstanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRdsInstanceResp) ProtoMessage() {}

func (x *GetRdsInstanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRdsInstanceResp.ProtoReflect.Descriptor instead.
func (*GetRdsInstanceResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetRdsInstanceResp) GetRdsList() []*RdsInstance {
	if x != nil {
		return x.RdsList
	}
	return nil
}

//获取Redis实例信息
type GetRedisInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId int32 `protobuf:"varint,1,opt,name=RegionId,proto3" json:"RegionId,omitempty"`
}

func (x *GetRedisInstanceReq) Reset() {
	*x = GetRedisInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedisInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedisInstanceReq) ProtoMessage() {}

func (x *GetRedisInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedisInstanceReq.ProtoReflect.Descriptor instead.
func (*GetRedisInstanceReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetRedisInstanceReq) GetRegionId() int32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type RedisInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId       string `protobuf:"bytes,1,opt,name=InstanceId,proto3" json:"InstanceId,omitempty"`
	InstanceName     string `protobuf:"bytes,2,opt,name=InstanceName,proto3" json:"InstanceName,omitempty"`
	InstanceType     string `protobuf:"bytes,3,opt,name=InstanceType,proto3" json:"InstanceType,omitempty"`
	EngineVersion    string `protobuf:"bytes,4,opt,name=EngineVersion,proto3" json:"EngineVersion,omitempty"`
	EditionType      string `protobuf:"bytes,5,opt,name=EditionType,proto3" json:"EditionType,omitempty"`
	ArchitectureType string `protobuf:"bytes,6,opt,name=ArchitectureType,proto3" json:"ArchitectureType,omitempty"`
	NodeType         string `protobuf:"bytes,7,opt,name=NodeType,proto3" json:"NodeType,omitempty"`
	InstanceStatus   string `protobuf:"bytes,8,opt,name=InstanceStatus,proto3" json:"InstanceStatus,omitempty"`
	RegionId         string `protobuf:"bytes,9,opt,name=RegionId,proto3" json:"RegionId,omitempty"`
	ConnectionDomain string `protobuf:"bytes,10,opt,name=ConnectionDomain,proto3" json:"ConnectionDomain,omitempty"`
}

func (x *RedisInstance) Reset() {
	*x = RedisInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisInstance) ProtoMessage() {}

func (x *RedisInstance) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisInstance.ProtoReflect.Descriptor instead.
func (*RedisInstance) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{9}
}

func (x *RedisInstance) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *RedisInstance) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *RedisInstance) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *RedisInstance) GetEngineVersion() string {
	if x != nil {
		return x.EngineVersion
	}
	return ""
}

func (x *RedisInstance) GetEditionType() string {
	if x != nil {
		return x.EditionType
	}
	return ""
}

func (x *RedisInstance) GetArchitectureType() string {
	if x != nil {
		return x.ArchitectureType
	}
	return ""
}

func (x *RedisInstance) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

func (x *RedisInstance) GetInstanceStatus() string {
	if x != nil {
		return x.InstanceStatus
	}
	return ""
}

func (x *RedisInstance) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *RedisInstance) GetConnectionDomain() string {
	if x != nil {
		return x.ConnectionDomain
	}
	return ""
}

type GetRedisInstanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedisList []*RedisInstance `protobuf:"bytes,1,rep,name=RedisList,proto3" json:"RedisList,omitempty"`
}

func (x *GetRedisInstanceResp) Reset() {
	*x = GetRedisInstanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedisInstanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedisInstanceResp) ProtoMessage() {}

func (x *GetRedisInstanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedisInstanceResp.ProtoReflect.Descriptor instead.
func (*GetRedisInstanceResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetRedisInstanceResp) GetRedisList() []*RedisInstance {
	if x != nil {
		return x.RedisList
	}
	return nil
}

//获取DMS工单信息
type GetDmsListOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderStatus string `protobuf:"bytes,1,opt,name=OrderStatus,proto3" json:"OrderStatus,omitempty"`
}

func (x *GetDmsListOrderReq) Reset() {
	*x = GetDmsListOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDmsListOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDmsListOrderReq) ProtoMessage() {}

func (x *GetDmsListOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDmsListOrderReq.ProtoReflect.Descriptor instead.
func (*GetDmsListOrderReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetDmsListOrderReq) GetOrderStatus() string {
	if x != nil {
		return x.OrderStatus
	}
	return ""
}

type DmsOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusDesc     string `protobuf:"bytes,1,opt,name=StatusDesc,proto3" json:"StatusDesc,omitempty"`
	Comment        string `protobuf:"bytes,2,opt,name=Comment,proto3" json:"Comment,omitempty"`
	CreateTime     string `protobuf:"bytes,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Committer      string `protobuf:"bytes,4,opt,name=Committer,proto3" json:"Committer,omitempty"`
	OrderId        int64  `protobuf:"varint,5,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	LastModifyTime string `protobuf:"bytes,6,opt,name=LastModifyTime,proto3" json:"LastModifyTime,omitempty"`
	PluginType     string `protobuf:"bytes,7,opt,name=PluginType,proto3" json:"PluginType,omitempty"`
	CommitterId    int64  `protobuf:"varint,8,opt,name=CommitterId,proto3" json:"CommitterId,omitempty"`
	StatusCode     string `protobuf:"bytes,9,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
}

func (x *DmsOrder) Reset() {
	*x = DmsOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DmsOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DmsOrder) ProtoMessage() {}

func (x *DmsOrder) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DmsOrder.ProtoReflect.Descriptor instead.
func (*DmsOrder) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{12}
}

func (x *DmsOrder) GetStatusDesc() string {
	if x != nil {
		return x.StatusDesc
	}
	return ""
}

func (x *DmsOrder) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *DmsOrder) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DmsOrder) GetCommitter() string {
	if x != nil {
		return x.Committer
	}
	return ""
}

func (x *DmsOrder) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *DmsOrder) GetLastModifyTime() string {
	if x != nil {
		return x.LastModifyTime
	}
	return ""
}

func (x *DmsOrder) GetPluginType() string {
	if x != nil {
		return x.PluginType
	}
	return ""
}

func (x *DmsOrder) GetCommitterId() int64 {
	if x != nil {
		return x.CommitterId
	}
	return 0
}

func (x *DmsOrder) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

type GetDmsListOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DmsOrderList []*DmsOrder `protobuf:"bytes,1,rep,name=DmsOrderList,proto3" json:"DmsOrderList,omitempty"`
}

func (x *GetDmsListOrderResp) Reset() {
	*x = GetDmsListOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDmsListOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDmsListOrderResp) ProtoMessage() {}

func (x *GetDmsListOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDmsListOrderResp.ProtoReflect.Descriptor instead.
func (*GetDmsListOrderResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetDmsListOrderResp) GetDmsOrderList() []*DmsOrder {
	if x != nil {
		return x.DmsOrderList
	}
	return nil
}

//获取DMS用户信息
type GetDmsListUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber int32 `protobuf:"varint,1,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
}

func (x *GetDmsListUsersReq) Reset() {
	*x = GetDmsListUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDmsListUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDmsListUsersReq) ProtoMessage() {}

func (x *GetDmsListUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDmsListUsersReq.ProtoReflect.Descriptor instead.
func (*GetDmsListUsersReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetDmsListUsersReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type DmsUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName string `protobuf:"bytes,1,opt,name=NickName,proto3" json:"NickName,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	State    string `protobuf:"bytes,3,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *DmsUserInfo) Reset() {
	*x = DmsUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DmsUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DmsUserInfo) ProtoMessage() {}

func (x *DmsUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DmsUserInfo.ProtoReflect.Descriptor instead.
func (*DmsUserInfo) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{15}
}

func (x *DmsUserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *DmsUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DmsUserInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type GetDmsListUsersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListUser []*DmsUserInfo `protobuf:"bytes,1,rep,name=ListUser,proto3" json:"ListUser,omitempty"`
}

func (x *GetDmsListUsersResp) Reset() {
	*x = GetDmsListUsersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDmsListUsersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDmsListUsersResp) ProtoMessage() {}

func (x *GetDmsListUsersResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDmsListUsersResp.ProtoReflect.Descriptor instead.
func (*GetDmsListUsersResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetDmsListUsersResp) GetListUser() []*DmsUserInfo {
	if x != nil {
		return x.ListUser
	}
	return nil
}

//获取DMS实例信息
type GetDmsListInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchKey  string `protobuf:"bytes,1,opt,name=SearchKey,proto3" json:"SearchKey,omitempty"`
	DbType     string `protobuf:"bytes,2,opt,name=DbType,proto3" json:"DbType,omitempty"`
	EnvType    string `protobuf:"bytes,3,opt,name=EnvType,proto3" json:"EnvType,omitempty"`
	PageNumber int32  `protobuf:"varint,4,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
}

func (x *GetDmsListInstanceReq) Reset() {
	*x = GetDmsListInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDmsListInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDmsListInstanceReq) ProtoMessage() {}

func (x *GetDmsListInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDmsListInstanceReq.ProtoReflect.Descriptor instead.
func (*GetDmsListInstanceReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetDmsListInstanceReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *GetDmsListInstanceReq) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

func (x *GetDmsListInstanceReq) GetEnvType() string {
	if x != nil {
		return x.EnvType
	}
	return ""
}

func (x *GetDmsListInstanceReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type DmsInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceSource string `protobuf:"bytes,1,opt,name=InstanceSource,proto3" json:"InstanceSource,omitempty"`
	InstanceId     string `protobuf:"bytes,2,opt,name=InstanceId,proto3" json:"InstanceId,omitempty"`
	InstanceAlias  string `protobuf:"bytes,3,opt,name=InstanceAlias,proto3" json:"InstanceAlias,omitempty"`
	InstanceType   string `protobuf:"bytes,4,opt,name=InstanceType,proto3" json:"InstanceType,omitempty"`
	Host           string `protobuf:"bytes,5,opt,name=Host,proto3" json:"Host,omitempty"`
	Port           int32  `protobuf:"varint,6,opt,name=Port,proto3" json:"Port,omitempty"`
	EnvType        string `protobuf:"bytes,7,opt,name=EnvType,proto3" json:"EnvType,omitempty"`
	GroupMode      string `protobuf:"bytes,8,opt,name=GroupMode,proto3" json:"GroupMode,omitempty"`
	State          string `protobuf:"bytes,9,opt,name=State,proto3" json:"State,omitempty"`
	EcsRegion      string `protobuf:"bytes,10,opt,name=EcsRegion,proto3" json:"EcsRegion,omitempty"`
}

func (x *DmsInstance) Reset() {
	*x = DmsInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DmsInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DmsInstance) ProtoMessage() {}

func (x *DmsInstance) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DmsInstance.ProtoReflect.Descriptor instead.
func (*DmsInstance) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{18}
}

func (x *DmsInstance) GetInstanceSource() string {
	if x != nil {
		return x.InstanceSource
	}
	return ""
}

func (x *DmsInstance) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DmsInstance) GetInstanceAlias() string {
	if x != nil {
		return x.InstanceAlias
	}
	return ""
}

func (x *DmsInstance) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *DmsInstance) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DmsInstance) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DmsInstance) GetEnvType() string {
	if x != nil {
		return x.EnvType
	}
	return ""
}

func (x *DmsInstance) GetGroupMode() string {
	if x != nil {
		return x.GroupMode
	}
	return ""
}

func (x *DmsInstance) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *DmsInstance) GetEcsRegion() string {
	if x != nil {
		return x.EcsRegion
	}
	return ""
}

type GetDmsListInstanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DmsInstanceList []*DmsInstance `protobuf:"bytes,1,rep,name=DmsInstanceList,proto3" json:"DmsInstanceList,omitempty"`
}

func (x *GetDmsListInstanceResp) Reset() {
	*x = GetDmsListInstanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDmsListInstanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDmsListInstanceResp) ProtoMessage() {}

func (x *GetDmsListInstanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDmsListInstanceResp.ProtoReflect.Descriptor instead.
func (*GetDmsListInstanceResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetDmsListInstanceResp) GetDmsInstanceList() []*DmsInstance {
	if x != nil {
		return x.DmsInstanceList
	}
	return nil
}

//获取DMS数据库信息
type GetDmsSearchDatabaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchKey  string `protobuf:"bytes,1,opt,name=SearchKey,proto3" json:"SearchKey,omitempty"`
	EnvType    string `protobuf:"bytes,2,opt,name=EnvType,proto3" json:"EnvType,omitempty"`
	DbType     string `protobuf:"bytes,3,opt,name=DbType,proto3" json:"DbType,omitempty"`
	PageNumber int32  `protobuf:"varint,4,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
}

func (x *GetDmsSearchDatabaseReq) Reset() {
	*x = GetDmsSearchDatabaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDmsSearchDatabaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDmsSearchDatabaseReq) ProtoMessage() {}

func (x *GetDmsSearchDatabaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDmsSearchDatabaseReq.ProtoReflect.Descriptor instead.
func (*GetDmsSearchDatabaseReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetDmsSearchDatabaseReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *GetDmsSearchDatabaseReq) GetEnvType() string {
	if x != nil {
		return x.EnvType
	}
	return ""
}

func (x *GetDmsSearchDatabaseReq) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

func (x *GetDmsSearchDatabaseReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type DmsDatabase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaName string `protobuf:"bytes,1,opt,name=SchemaName,proto3" json:"SchemaName,omitempty"`
	DatabaseId string `protobuf:"bytes,2,opt,name=DatabaseId,proto3" json:"DatabaseId,omitempty"`
	Encoding   string `protobuf:"bytes,3,opt,name=Encoding,proto3" json:"Encoding,omitempty"`
	DbType     string `protobuf:"bytes,4,opt,name=DbType,proto3" json:"DbType,omitempty"`
	EnvType    string `protobuf:"bytes,5,opt,name=EnvType,proto3" json:"EnvType,omitempty"`
	Alias      string `protobuf:"bytes,6,opt,name=Alias,proto3" json:"Alias,omitempty"`
	Host       string `protobuf:"bytes,7,opt,name=Host,proto3" json:"Host,omitempty"`
}

func (x *DmsDatabase) Reset() {
	*x = DmsDatabase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DmsDatabase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DmsDatabase) ProtoMessage() {}

func (x *DmsDatabase) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DmsDatabase.ProtoReflect.Descriptor instead.
func (*DmsDatabase) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{21}
}

func (x *DmsDatabase) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *DmsDatabase) GetDatabaseId() string {
	if x != nil {
		return x.DatabaseId
	}
	return ""
}

func (x *DmsDatabase) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *DmsDatabase) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

func (x *DmsDatabase) GetEnvType() string {
	if x != nil {
		return x.EnvType
	}
	return ""
}

func (x *DmsDatabase) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *DmsDatabase) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type GetDmsSearchDatabaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchDatabase []*DmsDatabase `protobuf:"bytes,1,rep,name=SearchDatabase,proto3" json:"SearchDatabase,omitempty"`
}

func (x *GetDmsSearchDatabaseResp) Reset() {
	*x = GetDmsSearchDatabaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDmsSearchDatabaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDmsSearchDatabaseResp) ProtoMessage() {}

func (x *GetDmsSearchDatabaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDmsSearchDatabaseResp.ProtoReflect.Descriptor instead.
func (*GetDmsSearchDatabaseResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetDmsSearchDatabaseResp) GetSearchDatabase() []*DmsDatabase {
	if x != nil {
		return x.SearchDatabase
	}
	return nil
}

//获取DBS备份计划信息
type GetDbsBackupPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum int32 `protobuf:"varint,1,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
}

func (x *GetDbsBackupPlanReq) Reset() {
	*x = GetDbsBackupPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDbsBackupPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDbsBackupPlanReq) ProtoMessage() {}

func (x *GetDbsBackupPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDbsBackupPlanReq.ProtoReflect.Descriptor instead.
func (*GetDbsBackupPlanReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetDbsBackupPlanReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type BackupPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupPlanId     string `protobuf:"bytes,1,opt,name=BackupPlanId,proto3" json:"BackupPlanId,omitempty"`
	BackupPlanName   string `protobuf:"bytes,2,opt,name=BackupPlanName,proto3" json:"BackupPlanName,omitempty"`
	DatabaseType     string `protobuf:"bytes,3,opt,name=DatabaseType,proto3" json:"DatabaseType,omitempty"`
	OSSBucketRegion  string `protobuf:"bytes,4,opt,name=OSSBucketRegion,proto3" json:"OSSBucketRegion,omitempty"`
	BackupMethod     string `protobuf:"bytes,5,opt,name=BackupMethod,proto3" json:"BackupMethod,omitempty"`
	InstanceClass    string `protobuf:"bytes,6,opt,name=InstanceClass,proto3" json:"InstanceClass,omitempty"`
	BackupPlanStatus string `protobuf:"bytes,7,opt,name=BackupPlanStatus,proto3" json:"BackupPlanStatus,omitempty"`
}

func (x *BackupPlan) Reset() {
	*x = BackupPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupPlan) ProtoMessage() {}

func (x *BackupPlan) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupPlan.ProtoReflect.Descriptor instead.
func (*BackupPlan) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{24}
}

func (x *BackupPlan) GetBackupPlanId() string {
	if x != nil {
		return x.BackupPlanId
	}
	return ""
}

func (x *BackupPlan) GetBackupPlanName() string {
	if x != nil {
		return x.BackupPlanName
	}
	return ""
}

func (x *BackupPlan) GetDatabaseType() string {
	if x != nil {
		return x.DatabaseType
	}
	return ""
}

func (x *BackupPlan) GetOSSBucketRegion() string {
	if x != nil {
		return x.OSSBucketRegion
	}
	return ""
}

func (x *BackupPlan) GetBackupMethod() string {
	if x != nil {
		return x.BackupMethod
	}
	return ""
}

func (x *BackupPlan) GetInstanceClass() string {
	if x != nil {
		return x.InstanceClass
	}
	return ""
}

func (x *BackupPlan) GetBackupPlanStatus() string {
	if x != nil {
		return x.BackupPlanStatus
	}
	return ""
}

type GetDbsBackupPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackupPlanList []*BackupPlan `protobuf:"bytes,1,rep,name=BackupPlanList,proto3" json:"BackupPlanList,omitempty"`
}

func (x *GetDbsBackupPlanResp) Reset() {
	*x = GetDbsBackupPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDbsBackupPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDbsBackupPlanResp) ProtoMessage() {}

func (x *GetDbsBackupPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDbsBackupPlanResp.ProtoReflect.Descriptor instead.
func (*GetDbsBackupPlanResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetDbsBackupPlanResp) GetBackupPlanList() []*BackupPlan {
	if x != nil {
		return x.BackupPlanList
	}
	return nil
}

//获取DTS数据同步任务状态
type GetDtsSyncJobNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum int32 `protobuf:"varint,1,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
}

func (x *GetDtsSyncJobNameReq) Reset() {
	*x = GetDtsSyncJobNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDtsSyncJobNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDtsSyncJobNameReq) ProtoMessage() {}

func (x *GetDtsSyncJobNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDtsSyncJobNameReq.ProtoReflect.Descriptor instead.
func (*GetDtsSyncJobNameReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetDtsSyncJobNameReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type SyncInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncJobId    string `protobuf:"bytes,1,opt,name=SyncJobId,proto3" json:"SyncJobId,omitempty"`
	SyncJobName  string `protobuf:"bytes,2,opt,name=SyncJobName,proto3" json:"SyncJobName,omitempty"`
	SyncJobClass string `protobuf:"bytes,3,opt,name=SyncJobClass,proto3" json:"SyncJobClass,omitempty"`
	Status       string `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
	Delay        string `protobuf:"bytes,5,opt,name=Delay,proto3" json:"Delay,omitempty"`
}

func (x *SyncInstance) Reset() {
	*x = SyncInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncInstance) ProtoMessage() {}

func (x *SyncInstance) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncInstance.ProtoReflect.Descriptor instead.
func (*SyncInstance) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{27}
}

func (x *SyncInstance) GetSyncJobId() string {
	if x != nil {
		return x.SyncJobId
	}
	return ""
}

func (x *SyncInstance) GetSyncJobName() string {
	if x != nil {
		return x.SyncJobName
	}
	return ""
}

func (x *SyncInstance) GetSyncJobClass() string {
	if x != nil {
		return x.SyncJobClass
	}
	return ""
}

func (x *SyncInstance) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SyncInstance) GetDelay() string {
	if x != nil {
		return x.Delay
	}
	return ""
}

type GetDtsSyncJobNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncJobList []*SyncInstance `protobuf:"bytes,1,rep,name=SyncJobList,proto3" json:"SyncJobList,omitempty"`
}

func (x *GetDtsSyncJobNameResp) Reset() {
	*x = GetDtsSyncJobNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDtsSyncJobNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDtsSyncJobNameResp) ProtoMessage() {}

func (x *GetDtsSyncJobNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDtsSyncJobNameResp.ProtoReflect.Descriptor instead.
func (*GetDtsSyncJobNameResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetDtsSyncJobNameResp) GetSyncJobList() []*SyncInstance {
	if x != nil {
		return x.SyncJobList
	}
	return nil
}

//获取RDS中慢日志统计
type GetRdsSlowLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DBInstanceId string `protobuf:"bytes,1,opt,name=DBInstanceId,proto3" json:"DBInstanceId,omitempty"`
	StartTime    string `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime      string `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	DBName       string `protobuf:"bytes,4,opt,name=DBName,proto3" json:"DBName,omitempty"`
	PageNumber   int32  `protobuf:"varint,5,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
}

func (x *GetRdsSlowLogReq) Reset() {
	*x = GetRdsSlowLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRdsSlowLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRdsSlowLogReq) ProtoMessage() {}

func (x *GetRdsSlowLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRdsSlowLogReq.ProtoReflect.Descriptor instead.
func (*GetRdsSlowLogReq) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetRdsSlowLogReq) GetDBInstanceId() string {
	if x != nil {
		return x.DBInstanceId
	}
	return ""
}

func (x *GetRdsSlowLogReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetRdsSlowLogReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetRdsSlowLogReq) GetDBName() string {
	if x != nil {
		return x.DBName
	}
	return ""
}

func (x *GetRdsSlowLogReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type SQLSlowLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SQLHASH                   string `protobuf:"bytes,1,opt,name=SQLHASH,proto3" json:"SQLHASH,omitempty"`
	DBName                    string `protobuf:"bytes,2,opt,name=DBName,proto3" json:"DBName,omitempty"`
	SQLText                   string `protobuf:"bytes,3,opt,name=SQLText,proto3" json:"SQLText,omitempty"`
	MySQLTotalExecutionCounts int64  `protobuf:"varint,4,opt,name=MySQLTotalExecutionCounts,proto3" json:"MySQLTotalExecutionCounts,omitempty"`
	MySQLTotalExecutionTimes  int64  `protobuf:"varint,5,opt,name=MySQLTotalExecutionTimes,proto3" json:"MySQLTotalExecutionTimes,omitempty"`
	MaxExecutionTime          int64  `protobuf:"varint,6,opt,name=MaxExecutionTime,proto3" json:"MaxExecutionTime,omitempty"`
	TotalLockTimes            int64  `protobuf:"varint,7,opt,name=TotalLockTimes,proto3" json:"TotalLockTimes,omitempty"`
	MaxLockTime               int64  `protobuf:"varint,8,opt,name=MaxLockTime,proto3" json:"MaxLockTime,omitempty"`
	ParseTotalRowCounts       int64  `protobuf:"varint,9,opt,name=ParseTotalRowCounts,proto3" json:"ParseTotalRowCounts,omitempty"`
	ParseMaxRowCount          int64  `protobuf:"varint,10,opt,name=ParseMaxRowCount,proto3" json:"ParseMaxRowCount,omitempty"`
	ReturnTotalRowCounts      int64  `protobuf:"varint,11,opt,name=ReturnTotalRowCounts,proto3" json:"ReturnTotalRowCounts,omitempty"`
	ReturnMaxRowCount         int64  `protobuf:"varint,12,opt,name=ReturnMaxRowCount,proto3" json:"ReturnMaxRowCount,omitempty"`
}

func (x *SQLSlowLog) Reset() {
	*x = SQLSlowLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLSlowLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLSlowLog) ProtoMessage() {}

func (x *SQLSlowLog) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLSlowLog.ProtoReflect.Descriptor instead.
func (*SQLSlowLog) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{30}
}

func (x *SQLSlowLog) GetSQLHASH() string {
	if x != nil {
		return x.SQLHASH
	}
	return ""
}

func (x *SQLSlowLog) GetDBName() string {
	if x != nil {
		return x.DBName
	}
	return ""
}

func (x *SQLSlowLog) GetSQLText() string {
	if x != nil {
		return x.SQLText
	}
	return ""
}

func (x *SQLSlowLog) GetMySQLTotalExecutionCounts() int64 {
	if x != nil {
		return x.MySQLTotalExecutionCounts
	}
	return 0
}

func (x *SQLSlowLog) GetMySQLTotalExecutionTimes() int64 {
	if x != nil {
		return x.MySQLTotalExecutionTimes
	}
	return 0
}

func (x *SQLSlowLog) GetMaxExecutionTime() int64 {
	if x != nil {
		return x.MaxExecutionTime
	}
	return 0
}

func (x *SQLSlowLog) GetTotalLockTimes() int64 {
	if x != nil {
		return x.TotalLockTimes
	}
	return 0
}

func (x *SQLSlowLog) GetMaxLockTime() int64 {
	if x != nil {
		return x.MaxLockTime
	}
	return 0
}

func (x *SQLSlowLog) GetParseTotalRowCounts() int64 {
	if x != nil {
		return x.ParseTotalRowCounts
	}
	return 0
}

func (x *SQLSlowLog) GetParseMaxRowCount() int64 {
	if x != nil {
		return x.ParseMaxRowCount
	}
	return 0
}

func (x *SQLSlowLog) GetReturnTotalRowCounts() int64 {
	if x != nil {
		return x.ReturnTotalRowCounts
	}
	return 0
}

func (x *SQLSlowLog) GetReturnMaxRowCount() int64 {
	if x != nil {
		return x.ReturnMaxRowCount
	}
	return 0
}

type GetRdsSlowLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRecordCount int32         `protobuf:"varint,1,opt,name=TotalRecordCount,proto3" json:"TotalRecordCount,omitempty"`
	DBInstanceId     string        `protobuf:"bytes,2,opt,name=DBInstanceId,proto3" json:"DBInstanceId,omitempty"`
	StartTime        string        `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime          string        `protobuf:"bytes,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	SlowLogList      []*SQLSlowLog `protobuf:"bytes,5,rep,name=SlowLogList,proto3" json:"SlowLogList,omitempty"`
	Engine           string        `protobuf:"bytes,6,opt,name=Engine,proto3" json:"Engine,omitempty"`
}

func (x *GetRdsSlowLogResp) Reset() {
	*x = GetRdsSlowLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRdsSlowLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRdsSlowLogResp) ProtoMessage() {}

func (x *GetRdsSlowLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_database_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRdsSlowLogResp.ProtoReflect.Descriptor instead.
func (*GetRdsSlowLogResp) Descriptor() ([]byte, []int) {
	return file_database_service_proto_rawDescGZIP(), []int{31}
}

func (x *GetRdsSlowLogResp) GetTotalRecordCount() int32 {
	if x != nil {
		return x.TotalRecordCount
	}
	return 0
}

func (x *GetRdsSlowLogResp) GetDBInstanceId() string {
	if x != nil {
		return x.DBInstanceId
	}
	return ""
}

func (x *GetRdsSlowLogResp) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetRdsSlowLogResp) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetRdsSlowLogResp) GetSlowLogList() []*SQLSlowLog {
	if x != nil {
		return x.SlowLogList
	}
	return nil
}

func (x *GetRdsSlowLogResp) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

var File_database_service_proto protoreflect.FileDescriptor

var file_database_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x20, 0x0a, 0x0a, 0x49, 0x63, 0x6b,
	0x65, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1d, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x64, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc1, 0x02, 0x0a, 0x0b, 0x52, 0x64, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x42, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x42,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x44, 0x42,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x44, 0x42, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x44, 0x42, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x42, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x42, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x44, 0x42, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x52, 0x64, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x07, 0x52, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x64, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x07, 0x52, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf7, 0x02, 0x0a, 0x0d,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x45,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x54, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a,
	0x09, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x09, 0x52, 0x65, 0x64, 0x69, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xa6, 0x02, 0x0a, 0x08, 0x44, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4c, 0x61, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x54, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0c, 0x44, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6d, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x44, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x34, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x0b, 0x44, 0x6d, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x4f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6d, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb3, 0x02, 0x0a,
	0x0b, 0x44, 0x6d, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x76, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x63, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x63, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0f,
	0x44, 0x6d, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6d, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x0f, 0x44, 0x6d, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xc5, 0x01, 0x0a, 0x0b, 0x44, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x44, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44,
	0x6d, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x0e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x44, 0x62, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x9c, 0x02, 0x0a, 0x0a,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c,
	0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x53,
	0x53, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x4f, 0x53, 0x53, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5b, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x44, 0x62, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50,
	0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x74,
	0x73, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x53, 0x79,
	0x6e, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x79,
	0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63,
	0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53,
	0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x79,
	0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x58, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x44, 0x74, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x4a,
	0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x64,
	0x73, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x44,
	0x42, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x44, 0x42, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x42, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x88, 0x04, 0x0a, 0x0a, 0x53, 0x51, 0x4c, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x51, 0x4c, 0x48, 0x41, 0x53, 0x48, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x53, 0x51, 0x4c, 0x48, 0x41, 0x53, 0x48, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x42, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x42, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x51, 0x4c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x53, 0x51, 0x4c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x4d, 0x79, 0x53, 0x51,
	0x4c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x4d, 0x79, 0x53, 0x51,
	0x4c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x4d, 0x61, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x4c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d,
	0x61, 0x78, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x50, 0x61, 0x72, 0x73, 0x65, 0x4d, 0x61, 0x78,
	0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x61, 0x78, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d,
	0x61, 0x78, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x52, 0x64, 0x73, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x42, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x44, 0x42, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x53, 0x6c, 0x6f, 0x77,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x51, 0x4c, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52, 0x0b, 0x53, 0x6c, 0x6f, 0x77,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x32,
	0x83, 0x08, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x52, 0x64, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x64, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x64, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x64, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x64, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x25, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44,
	0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x27, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x6d, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x28, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x6d, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44,
	0x62, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x24, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x62, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x62, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x74, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x74, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x74, 0x73, 0x53, 0x79,
	0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x52, 0x64, 0x73, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x12, 0x21,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x64, 0x73, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x64, 0x73, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_database_service_proto_rawDescOnce sync.Once
	file_database_service_proto_rawDescData = file_database_service_proto_rawDesc
)

func file_database_service_proto_rawDescGZIP() []byte {
	file_database_service_proto_rawDescOnce.Do(func() {
		file_database_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_database_service_proto_rawDescData)
	})
	return file_database_service_proto_rawDescData
}

var file_database_service_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_database_service_proto_goTypes = []interface{}{
	(*IckeyError)(nil),               // 0: databaseservice.IckeyError
	(*Request)(nil),                  // 1: databaseservice.Request
	(*Response)(nil),                 // 2: databaseservice.Response
	(*GetPersonReq)(nil),             // 3: databaseservice.GetPersonReq
	(*GetPersonResp)(nil),            // 4: databaseservice.GetPersonResp
	(*GetRdsInstanceReq)(nil),        // 5: databaseservice.GetRdsInstanceReq
	(*RdsInstance)(nil),              // 6: databaseservice.RdsInstance
	(*GetRdsInstanceResp)(nil),       // 7: databaseservice.GetRdsInstanceResp
	(*GetRedisInstanceReq)(nil),      // 8: databaseservice.GetRedisInstanceReq
	(*RedisInstance)(nil),            // 9: databaseservice.RedisInstance
	(*GetRedisInstanceResp)(nil),     // 10: databaseservice.GetRedisInstanceResp
	(*GetDmsListOrderReq)(nil),       // 11: databaseservice.GetDmsListOrderReq
	(*DmsOrder)(nil),                 // 12: databaseservice.DmsOrder
	(*GetDmsListOrderResp)(nil),      // 13: databaseservice.GetDmsListOrderResp
	(*GetDmsListUsersReq)(nil),       // 14: databaseservice.GetDmsListUsersReq
	(*DmsUserInfo)(nil),              // 15: databaseservice.DmsUserInfo
	(*GetDmsListUsersResp)(nil),      // 16: databaseservice.GetDmsListUsersResp
	(*GetDmsListInstanceReq)(nil),    // 17: databaseservice.GetDmsListInstanceReq
	(*DmsInstance)(nil),              // 18: databaseservice.DmsInstance
	(*GetDmsListInstanceResp)(nil),   // 19: databaseservice.GetDmsListInstanceResp
	(*GetDmsSearchDatabaseReq)(nil),  // 20: databaseservice.GetDmsSearchDatabaseReq
	(*DmsDatabase)(nil),              // 21: databaseservice.DmsDatabase
	(*GetDmsSearchDatabaseResp)(nil), // 22: databaseservice.GetDmsSearchDatabaseResp
	(*GetDbsBackupPlanReq)(nil),      // 23: databaseservice.GetDbsBackupPlanReq
	(*BackupPlan)(nil),               // 24: databaseservice.BackupPlan
	(*GetDbsBackupPlanResp)(nil),     // 25: databaseservice.GetDbsBackupPlanResp
	(*GetDtsSyncJobNameReq)(nil),     // 26: databaseservice.GetDtsSyncJobNameReq
	(*SyncInstance)(nil),             // 27: databaseservice.SyncInstance
	(*GetDtsSyncJobNameResp)(nil),    // 28: databaseservice.GetDtsSyncJobNameResp
	(*GetRdsSlowLogReq)(nil),         // 29: databaseservice.GetRdsSlowLogReq
	(*SQLSlowLog)(nil),               // 30: databaseservice.SQLSlowLog
	(*GetRdsSlowLogResp)(nil),        // 31: databaseservice.GetRdsSlowLogResp
}
var file_database_service_proto_depIdxs = []int32{
	6,  // 0: databaseservice.GetRdsInstanceResp.RdsList:type_name -> databaseservice.RdsInstance
	9,  // 1: databaseservice.GetRedisInstanceResp.RedisList:type_name -> databaseservice.RedisInstance
	12, // 2: databaseservice.GetDmsListOrderResp.DmsOrderList:type_name -> databaseservice.DmsOrder
	15, // 3: databaseservice.GetDmsListUsersResp.ListUser:type_name -> databaseservice.DmsUserInfo
	18, // 4: databaseservice.GetDmsListInstanceResp.DmsInstanceList:type_name -> databaseservice.DmsInstance
	21, // 5: databaseservice.GetDmsSearchDatabaseResp.SearchDatabase:type_name -> databaseservice.DmsDatabase
	24, // 6: databaseservice.GetDbsBackupPlanResp.BackupPlanList:type_name -> databaseservice.BackupPlan
	27, // 7: databaseservice.GetDtsSyncJobNameResp.SyncJobList:type_name -> databaseservice.SyncInstance
	30, // 8: databaseservice.GetRdsSlowLogResp.SlowLogList:type_name -> databaseservice.SQLSlowLog
	1,  // 9: databaseservice.DatabaseService.Ping:input_type -> databaseservice.Request
	3,  // 10: databaseservice.DatabaseService.GetPerson:input_type -> databaseservice.GetPersonReq
	5,  // 11: databaseservice.DatabaseService.GetRdsInstance:input_type -> databaseservice.GetRdsInstanceReq
	8,  // 12: databaseservice.DatabaseService.GetRedisInstance:input_type -> databaseservice.GetRedisInstanceReq
	11, // 13: databaseservice.DatabaseService.GetDmsListOrder:input_type -> databaseservice.GetDmsListOrderReq
	14, // 14: databaseservice.DatabaseService.GetDmsListUsers:input_type -> databaseservice.GetDmsListUsersReq
	17, // 15: databaseservice.DatabaseService.GetDmsListInstance:input_type -> databaseservice.GetDmsListInstanceReq
	20, // 16: databaseservice.DatabaseService.GetDmsSearchDatabase:input_type -> databaseservice.GetDmsSearchDatabaseReq
	23, // 17: databaseservice.DatabaseService.GetDbsBackupPlan:input_type -> databaseservice.GetDbsBackupPlanReq
	26, // 18: databaseservice.DatabaseService.GetDtsSyncJobName:input_type -> databaseservice.GetDtsSyncJobNameReq
	29, // 19: databaseservice.DatabaseService.GetRdsSlowLog:input_type -> databaseservice.GetRdsSlowLogReq
	2,  // 20: databaseservice.DatabaseService.Ping:output_type -> databaseservice.Response
	4,  // 21: databaseservice.DatabaseService.GetPerson:output_type -> databaseservice.GetPersonResp
	7,  // 22: databaseservice.DatabaseService.GetRdsInstance:output_type -> databaseservice.GetRdsInstanceResp
	10, // 23: databaseservice.DatabaseService.GetRedisInstance:output_type -> databaseservice.GetRedisInstanceResp
	13, // 24: databaseservice.DatabaseService.GetDmsListOrder:output_type -> databaseservice.GetDmsListOrderResp
	16, // 25: databaseservice.DatabaseService.GetDmsListUsers:output_type -> databaseservice.GetDmsListUsersResp
	19, // 26: databaseservice.DatabaseService.GetDmsListInstance:output_type -> databaseservice.GetDmsListInstanceResp
	22, // 27: databaseservice.DatabaseService.GetDmsSearchDatabase:output_type -> databaseservice.GetDmsSearchDatabaseResp
	25, // 28: databaseservice.DatabaseService.GetDbsBackupPlan:output_type -> databaseservice.GetDbsBackupPlanResp
	28, // 29: databaseservice.DatabaseService.GetDtsSyncJobName:output_type -> databaseservice.GetDtsSyncJobNameResp
	31, // 30: databaseservice.DatabaseService.GetRdsSlowLog:output_type -> databaseservice.GetRdsSlowLogResp
	20, // [20:31] is the sub-list for method output_type
	9,  // [9:20] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_database_service_proto_init() }
func file_database_service_proto_init() {
	if File_database_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_database_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IckeyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRdsInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdsInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRdsInstanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedisInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedisInstanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDmsListOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DmsOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDmsListOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDmsListUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DmsUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDmsListUsersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDmsListInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DmsInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDmsListInstanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDmsSearchDatabaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DmsDatabase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDmsSearchDatabaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDbsBackupPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDbsBackupPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDtsSyncJobNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDtsSyncJobNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRdsSlowLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLSlowLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRdsSlowLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_database_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_database_service_proto_goTypes,
		DependencyIndexes: file_database_service_proto_depIdxs,
		MessageInfos:      file_database_service_proto_msgTypes,
	}.Build()
	File_database_service_proto = out.File
	file_database_service_proto_rawDesc = nil
	file_database_service_proto_goTypes = nil
	file_database_service_proto_depIdxs = nil
}
